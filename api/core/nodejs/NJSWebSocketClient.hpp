// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from websocket_client.djinni

#ifndef DJINNI_GENERATED_NJSWEBSOCKETCLIENT_HPP
#define DJINNI_GENERATED_NJSWEBSOCKETCLIENT_HPP


#include "../../../../core/src/ledger-core-source-api/api/WebSocketConnection.hpp"
#include "NJSWebSocketConnectionCpp.hpp"
#include <memory>
#include <string>

#include <nan.h>
#include <node.h>
#include "../../../../core/src/ledger-core-source-api/api/WebSocketClient.hpp"

using namespace v8;
using namespace node;
using namespace std;
using namespace ledger::core::api;

class NJSWebSocketClient: public Nan::ObjectWrap, public ledger::core::api::WebSocketClient {
public:

    static void Initialize(Local<Object> target);
    ~NJSWebSocketClient()
    {
        persistent().Reset();
        njs_impl.Reset();
        njs_impl.Reset();
    };
    NJSWebSocketClient(Local<Object> njs_implementation){njs_impl.Reset(njs_implementation);};

    void connect(const std::string & url, const std::shared_ptr<WebSocketConnection> & connection);

    void send(const std::shared_ptr<WebSocketConnection> & connection, const std::string & data);

    void disconnect(const std::shared_ptr<WebSocketConnection> & connection);

private:
    static NAN_METHOD(connect);

    static NAN_METHOD(send);

    static NAN_METHOD(disconnect);

    static NAN_METHOD(New);

    static NAN_METHOD(addRef);
    static NAN_METHOD(removeRef);
    Nan::Persistent<Object> njs_impl;
};
#endif //DJINNI_GENERATED_NJSWEBSOCKETCLIENT_HPP
