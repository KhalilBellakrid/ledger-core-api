// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from bitcoin_like_wallet.djinni

#ifndef DJINNI_GENERATED_NJSBITCOINLIKETRANSACTION_HPP
#define DJINNI_GENERATED_NJSBITCOINLIKETRANSACTION_HPP


#include "../../../../core/src/ledger-core-source-api/api/../../utils/optional.hpp"
#include "NJSAmountCpp.hpp"
#include "NJSBitcoinLikeBlockCpp.hpp"
#include "NJSBitcoinLikeInputCpp.hpp"
#include "NJSBitcoinLikeOutputCpp.hpp"
#include <chrono>
#include <cstdint>
#include <memory>
#include <string>
#include <vector>

#include <nan.h>
#include <node.h>
#include "../../../../core/src/ledger-core-source-api/api/BitcoinLikeTransaction.hpp"

using namespace v8;
using namespace node;
using namespace std;
using namespace ledger::core::api;

class NJSBitcoinLikeTransaction: public Nan::ObjectWrap {
public:

    static void Initialize(Local<Object> target);
    virtual ~NJSBitcoinLikeTransaction() {};
    NJSBitcoinLikeTransaction(const std::shared_ptr<ledger::core::api::BitcoinLikeTransaction> &iBitcoinLikeTransaction):_BitcoinLikeTransaction(iBitcoinLikeTransaction){};

    static Handle<Object> wrap(const std::shared_ptr<ledger::core::api::BitcoinLikeTransaction> &object);
    static Nan::Persistent<ObjectTemplate> BitcoinLikeTransaction_prototype;
    std::shared_ptr<ledger::core::api::BitcoinLikeTransaction> getCppImpl(){return _BitcoinLikeTransaction;};

private:
    /**
     *Get transaction hash
     *@return string, transaction hash
     */
    static NAN_METHOD(getHash);

    /**
     *Get list of inputs aggregated under that transaction
     *@return list of BitcoinLikeInput objects
     */
    static NAN_METHOD(getInputs);

    /**
     *Get list of outputs aggregated under that transaction
     *@return list of BitcoinLikeOutput objects
     */
    static NAN_METHOD(getOutputs);

    /**
     *Get block to which this transaction belongs
     *@return Optional BitcoinLikeBlock
     */
    static NAN_METHOD(getBlock);

    /**
     *Get lock time of transaction, block height from which transaction may be accepted by miners
     *@return 64 bits integer, block height after which transaction can be accepted
     */
    static NAN_METHOD(getLockTime);

    /**
     *Get fees payed for this transaction
     *@return Amount object, amount of fees
     */
    static NAN_METHOD(getFees);

    /**
     *Get time of creation of this transaction
     *@return Date object
     */
    static NAN_METHOD(getTime);

    static NAN_METHOD(New);

    std::shared_ptr<ledger::core::api::BitcoinLikeTransaction> _BitcoinLikeTransaction;
};
#endif //DJINNI_GENERATED_NJSBITCOINLIKETRANSACTION_HPP
