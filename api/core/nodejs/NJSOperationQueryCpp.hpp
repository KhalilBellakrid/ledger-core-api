// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from wallet.djinni

#ifndef DJINNI_GENERATED_NJSOPERATIONQUERY_HPP
#define DJINNI_GENERATED_NJSOPERATIONQUERY_HPP


#include "../../../../core/src/ledger-core-source-api/api/OperationOrderKey.hpp"
#include "NJSOperationListCallback.hpp"
#include "NJSQueryFilterCpp.hpp"
#include <cstdint>
#include <memory>

#include <nan.h>
#include <node.h>
#include "../../../../core/src/ledger-core-source-api/api/OperationQuery.hpp"

using namespace v8;
using namespace node;
using namespace std;
using namespace ledger::core::api;

class NJSOperationQuery: public Nan::ObjectWrap {
public:

    static void Initialize(Local<Object> target);
    virtual ~NJSOperationQuery() {};
    NJSOperationQuery(const std::shared_ptr<ledger::core::api::OperationQuery> &iOperationQuery):_OperationQuery(iOperationQuery){};

    static Handle<Object> wrap(const std::shared_ptr<ledger::core::api::OperationQuery> &object);
    static Nan::Persistent<ObjectTemplate> OperationQuery_prototype;
    std::shared_ptr<ledger::core::api::OperationQuery> getCppImpl(){return _OperationQuery;};

private:
    /**
     *Apply given order to query's operation
     *@param key, OperationOrderKey object which defines order
     *@param descending, bool
     *@return OperationQuery object, new ordered operation
     */
    static NAN_METHOD(addOrder);

    /**
     *Get applied filter on operation query
     *@return QueryFilter object
     */
    static NAN_METHOD(filter);

    /**
     *Add offset to the operation query
     *@param from, 64 bits integer
     */
    static NAN_METHOD(offset);

    /**
     *Add limit to the operation query results
     *@param count, 64 bits integer
     */
    static NAN_METHOD(limit);

    /**
     *TODO
     *Complete the operation query
     */
    static NAN_METHOD(complete);

    /**TODO */
    static NAN_METHOD(partial);

    /**
     *Execute query to retrieve operations
     *@param callback, if execute method succeed, ListCallback object returning a List of Operation objects
     */
    static NAN_METHOD(execute);

    static NAN_METHOD(New);

    std::shared_ptr<ledger::core::api::OperationQuery> _OperationQuery;
};
#endif //DJINNI_GENERATED_NJSOPERATIONQUERY_HPP
