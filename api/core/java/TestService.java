// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from core.djinni

package co.ledger.core;

import java.util.concurrent.atomic.AtomicBoolean;

public abstract class TestService {
    public abstract I64TestCallback getCallback();

    public abstract void setStringCallback(StringTestCallback callback);

    public abstract void setLedgerCoreCallback(LedgerCoreTestCallback callback);

    private static final class CppProxy extends TestService
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            destroy();
            super.finalize();
        }

        @Override
        public I64TestCallback getCallback()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getCallback(this.nativeRef);
        }
        private native I64TestCallback native_getCallback(long _nativeRef);

        @Override
        public void setStringCallback(StringTestCallback callback)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_setStringCallback(this.nativeRef, callback);
        }
        private native void native_setStringCallback(long _nativeRef, StringTestCallback callback);

        @Override
        public void setLedgerCoreCallback(LedgerCoreTestCallback callback)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_setLedgerCoreCallback(this.nativeRef, callback);
        }
        private native void native_setLedgerCoreCallback(long _nativeRef, LedgerCoreTestCallback callback);
    }
}
