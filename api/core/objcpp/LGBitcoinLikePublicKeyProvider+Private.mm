// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from bitcoin_public_key_provider.djinni

#import "LGBitcoinLikePublicKeyProvider+Private.h"
#import "LGBitcoinLikePublicKeyProvider.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#import "LGBitcoinLikeNetworkParameters+Private.h"
#import "LGBitcoinLikePublicKeyCompletionBlock+Private.h"
#include <stdexcept>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class BitcoinLikePublicKeyProvider::ObjcProxy final
: public ::ledger::core::api::BitcoinLikePublicKeyProvider
, public ::djinni::ObjcProxyCache::Handle<ObjcType>
{
public:
    using Handle::Handle;
    void get(const std::string & c_deviceId, const std::string & c_path, const ::ledger::core::api::BitcoinLikeNetworkParameters & c_params, const std::shared_ptr<::ledger::core::api::BitcoinLikePublicKeyCompletionBlock> & c_callback) override
    {
        @autoreleasepool {
            [Handle::get() get:(::djinni::String::fromCpp(c_deviceId))
                          path:(::djinni::String::fromCpp(c_path))
                        params:(::djinni_generated::BitcoinLikeNetworkParameters::fromCpp(c_params))
                      callback:(::djinni_generated::BitcoinLikePublicKeyCompletionBlock::fromCpp(c_callback))];
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto BitcoinLikePublicKeyProvider::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto BitcoinLikePublicKeyProvider::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).Handle::get();
}

}  // namespace djinni_generated
