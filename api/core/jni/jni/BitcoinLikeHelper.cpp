// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from bitcoin_like_wallet.djinni

#include "BitcoinLikeHelper.hpp"  // my header
#include "Amount.hpp"
#include "BitcoinLikeOutput.hpp"
#include "BitcoinLikePreparedTransaction.hpp"
#include "BitcoinLikeTransaction.hpp"
#include "Marshal.hpp"

namespace djinni_generated {

BitcoinLikeHelper::BitcoinLikeHelper() : ::djinni::JniInterface<::ledger::core::api::BitcoinLikeHelper, BitcoinLikeHelper>("co/ledger/core/BitcoinLikeHelper$CppProxy") {}

BitcoinLikeHelper::~BitcoinLikeHelper() = default;


CJNIEXPORT void JNICALL Java_co_ledger_core_BitcoinLikeHelper_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::ledger::core::api::BitcoinLikeHelper>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_BitcoinLikeHelper_scriptToOutput(JNIEnv* jniEnv, jobject /*this*/, jbyteArray j_script, jobject j_amount)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ledger::core::api::BitcoinLikeHelper::scriptToOutput(::djinni::Binary::toCpp(jniEnv, j_script),
                                                                        ::djinni_generated::Amount::toCpp(jniEnv, j_amount));
        return ::djinni::release(::djinni_generated::BitcoinLikeOutput::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_BitcoinLikeHelper_addressToOutput(JNIEnv* jniEnv, jobject /*this*/, jstring j_address, jobject j_amount)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ledger::core::api::BitcoinLikeHelper::addressToOutput(::djinni::String::toCpp(jniEnv, j_address),
                                                                         ::djinni_generated::Amount::toCpp(jniEnv, j_amount));
        return ::djinni::release(::djinni_generated::BitcoinLikeOutput::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jbyteArray JNICALL Java_co_ledger_core_BitcoinLikeHelper_serializeTransaction(JNIEnv* jniEnv, jobject /*this*/, jobject j_preparedTransaction)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ledger::core::api::BitcoinLikeHelper::serializeTransaction(::djinni_generated::BitcoinLikePreparedTransaction::toCpp(jniEnv, j_preparedTransaction));
        return ::djinni::release(::djinni::Binary::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_BitcoinLikeHelper_parseTransaction(JNIEnv* jniEnv, jobject /*this*/, jbyteArray j_transaction)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ledger::core::api::BitcoinLikeHelper::parseTransaction(::djinni::Binary::toCpp(jniEnv, j_transaction));
        return ::djinni::release(::djinni_generated::BitcoinLikeTransaction::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
