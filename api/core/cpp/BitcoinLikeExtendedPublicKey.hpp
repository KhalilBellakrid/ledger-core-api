// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from addresses.djinni

#ifndef DJINNI_GENERATED_BITCOINLIKEEXTENDEDPUBLICKEY_HPP
#define DJINNI_GENERATED_BITCOINLIKEEXTENDEDPUBLICKEY_HPP

#include "../../../../core/src/utils/optional.hpp"
#include <memory>
#include <string>

namespace ledger { namespace core { namespace api {

class BitcoinLikeAddress;
struct BitcoinLikeNetworkParameters;

class BitcoinLikeExtendedPublicKey {
public:
    virtual ~BitcoinLikeExtendedPublicKey() {}

    virtual std::shared_ptr<BitcoinLikeAddress> derive(const std::string & path) = 0;

    virtual std::string toBase58() = 0;

    virtual std::string getRootPath() = 0;

    static std::shared_ptr<BitcoinLikeExtendedPublicKey> fromBase58(const BitcoinLikeNetworkParameters & params, const std::string & address, const std::experimental::optional<std::string> & path);
};

} } }  // namespace ledger::core::api
#endif //DJINNI_GENERATED_BITCOINLIKEEXTENDEDPUBLICKEY_HPP
